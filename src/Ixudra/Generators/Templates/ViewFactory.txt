<?php


class ##CLASS_SINGULAR##ViewFactory extends BaseViewFactory {

    public function index($input = array())
    {
        if( empty($input) ) {
            $input = array(
                'name'          => '',
            );
        }

        return $this->prepareFilter($input, 'bootstrap.##VARIABLE_PLURAL##.index');
    }

    public function create($input)
    {
        if( $input == null ) {
            $input = App::make('##CLASS_SINGULAR##InputHelper')->getDefaultInput();
        }

        return $this->prepareForm( $input, 'bootstrap.##VARIABLE_PLURAL##.create' );
    }

    public function show($##VARIABLE_SINGULAR##)
    {
        $this->addParameter('##VARIABLE_SINGULAR##', $##VARIABLE_SINGULAR##);

        return $this->makeView('bootstrap.##VARIABLE_PLURAL##.show');
    }

    public function edit($##VARIABLE_SINGULAR##, $input)
    {
        if( $input == null ) {
            $input = App::make('##CLASS_SINGULAR##InputHelper')->getInputForModel( $##VARIABLE_SINGULAR## );
        }

        $this->addParameter('##VARIABLE_SINGULAR##', $##VARIABLE_SINGULAR##);

        return $this->prepareForm( $input, 'bootstrap.##VARIABLE_PLURAL##.edit' );
    }

    public function ##VARIABLE_SINGULAR##NotFound()
    {
        $this->notifyUser('error', array('##VARIABLE_SINGULAR##.error.notFound'));

        return $this->index();
    }

    protected function prepareFilter($input, $template)
    {
        $searchInput = App::make('##CLASS_SINGULAR##InputHelper')->getInputForSearch( $input );
        $##VARIABLE_PLURAL## = App::make('Eloquent##CLASS_SINGULAR##Repository')->search( $searchInput, 25 );

        $this->addParameter('##VARIABLE_PLURAL##', $##VARIABLE_PLURAL##);
        $this->addParameter('input', $input);

        return $this->makeView( $template );
    }

    protected function prepareForm($input, $template)
    {
        $this->addParameter('input', $input);

        return $this->makeView( $template );
    }

}