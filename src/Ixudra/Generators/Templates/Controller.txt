<?php


class ##CLASS_SINGULAR##Controller extends BaseController {

    function __construct(Eloquent##CLASS_SINGULAR##Repository $##VARIABLE_SINGULAR##Repository, ##CLASS_SINGULAR##ViewFactory $##VARIABLE_SINGULAR##ViewFactory)
    {
        $this->##VARIABLE_SINGULAR##Repository = $##VARIABLE_SINGULAR##Repository;
        $this->##VARIABLE_SINGULAR##ViewFactory = $##VARIABLE_SINGULAR##ViewFactory;
    }


    public function index()
    {
        return $this->##VARIABLE_SINGULAR##ViewFactory->index();
    }

    public function filter()
    {
        $input = Input::all();
        unset( $input[ '_token' ] );

        return $this->##VARIABLE_SINGULAR##ViewFactory->filter($input );
    }

    public function create()
    {
        return $this->##VARIABLE_SINGULAR##ViewFactory->create(null);
    }

    public function store()
    {
        $input = Input::all();

        $##VARIABLE_SINGULAR##Factory = App::make('##CLASS_SINGULAR##Factory');
        $##VARIABLE_SINGULAR##Response = $##VARIABLE_SINGULAR##Factory->createFromUserInput($input);

        if( !$##VARIABLE_SINGULAR##Response->isSuccessful() ) {
            $this->##VARIABLE_SINGULAR##ViewFactory->notifyUser('error', $##VARIABLE_SINGULAR##Response->getNotifications('error'));

            return $this->##VARIABLE_SINGULAR##ViewFactory->create($input);
        }

        $this->##VARIABLE_SINGULAR##ViewFactory->notifyUser('success', $##VARIABLE_SINGULAR##Response->getNotifications('success'));

        return $this->##VARIABLE_SINGULAR##ViewFactory->show($##VARIABLE_SINGULAR##Response->getModel());
    }

    public function show($id)
    {
        $##VARIABLE_SINGULAR## = $this->##VARIABLE_SINGULAR##Repository->find($id);
        if( $##VARIABLE_SINGULAR## == null ) {
            return $this->##VARIABLE_SINGULAR##ViewFactory->##VARIABLE_SINGULAR##NotFound();
        }

        return $this->##VARIABLE_SINGULAR##ViewFactory->show($##VARIABLE_SINGULAR##);
    }

    public function edit($id)
    {
        $##VARIABLE_SINGULAR## = $this->##VARIABLE_SINGULAR##Repository->find($id);
        if( $##VARIABLE_SINGULAR## == null ) {
            return $this->##VARIABLE_SINGULAR##ViewFactory->##VARIABLE_SINGULAR##NotFound();
        }

        return $this->##VARIABLE_SINGULAR##ViewFactory->edit($##VARIABLE_SINGULAR##, null);
    }

    public function update($id)
    {
        $##VARIABLE_SINGULAR## = $this->##VARIABLE_SINGULAR##Repository->find($id);
        if( $##VARIABLE_SINGULAR## == null ) {
            return $this->##VARIABLE_SINGULAR##ViewFactory->##VARIABLE_SINGULAR##NotFound();
        }

        $input = Input::all();

        $##VARIABLE_SINGULAR##Factory = App::make('##CLASS_SINGULAR##Factory');
        $##VARIABLE_SINGULAR##Response = $##VARIABLE_SINGULAR##Factory->modifyFromUserInput( $##VARIABLE_SINGULAR##, $input );

        if( !$##VARIABLE_SINGULAR##Response->isSuccessful() ) {
            $this->##VARIABLE_SINGULAR##ViewFactory->notifyUser('error', $##VARIABLE_SINGULAR##Response->getNotifications('error'));

            return $this->##VARIABLE_SINGULAR##ViewFactory->edit($##VARIABLE_SINGULAR##Response->getModel(), $##VARIABLE_SINGULAR##Response->getInput());
        }

        $this->##VARIABLE_SINGULAR##ViewFactory->notifyUser('success', $##VARIABLE_SINGULAR##Response->getNotifications('success'));

        return $this->##VARIABLE_SINGULAR##ViewFactory->show($##VARIABLE_SINGULAR##Response->getModel());
    }

    public function destroy($id)
    {
        $##VARIABLE_SINGULAR## = $this->##VARIABLE_SINGULAR##Repository->find($id);
        if( $##VARIABLE_SINGULAR## == null ) {
            return $this->##VARIABLE_SINGULAR##ViewFactory->##VARIABLE_SINGULAR##NotFound();
        }

        $result = $##VARIABLE_SINGULAR##->remove();

        if( !$result->isSuccessful() ) {
            $this->##VARIABLE_SINGULAR##ViewFactory->notifyUser('error', $result->getNotifications('error'));

            return $this->##VARIABLE_SINGULAR##ViewFactory->show($##VARIABLE_SINGULAR##);
        }

        $this->##VARIABLE_SINGULAR##ViewFactory->notifyUser('success', $result->getNotifications('success'));

        return $this->##VARIABLE_SINGULAR##ViewFactory->index();
    }

}